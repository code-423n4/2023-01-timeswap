{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "testCheckCorrectFormat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "optionPair",
          "type": "address"
        }
      ],
      "name": "testCheckDoesNotExist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCheckNotZeroAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526007805460ff191660011790556200001b62000032565b6008553480156200002b57600080fd5b5062001295565b6040805160a08101825260056060820181815264105b9d9a5b60da1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a3835343500000000000000000000008183015283850152835164185b9d9a5b60da1b8152600992810192909252925190819003602501902081518051600094620000cd92849291019062000f07565b50602082810151600183015560408301518051620000f2926002850192019062000f07565b50506040805160a0810182526007606082018181526612185c991a185d60ca1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a38353435000000000000000000000081830152838501528351661a185c991a185d60ca1b81526009928101929092529251908190036027019020815180519294509092620001969284929091019062000f07565b50602082810151600183015560408301518051620001bb926002850192019062000f07565b5090505060405180606001604052806040518060400160405280600781526020016613585a5b9b995d60ca1b8152508152602001600181526020016040518060600160405280603d8152602001620017f1603d9139905260408051661b585a5b9b995d60ca1b8152600960078201529051908190036027019020815180516200024d9183916020919091019062000f07565b5060208281015160018301556040830151805162000272926002850192019062000f07565b50905050604051806060016040528060405180604001604052806006815260200165476f65726c6960d01b8152508152602001600581526020016040518060600160405280603c81526020016200182e603c913990526040805165676f65726c6960d01b815260096006820152905190819003602601902081518051620003029183916020919091019062000f07565b5060208281015160018301556040830151805162000327926002850192019062000f07565b50506040805160a081018252600760608201818152665365706f6c696160c81b6080840152825262aa36a760208084019190915283518085018552601781527f68747470733a2f2f7270632e7365706f6c69612e64657600000000000000000081830152838501528351667365706f6c696160c81b81526009928101929092529251908190036027019020815180519294509092620003cc9284929091019062000f07565b50602082810151600183015560408301518051620003f1926002850192019062000f07565b50506040805160a081018252600860608201818152674f7074696d69736d60c01b60808401528252600a60208084019190915283518085018552601b81527f68747470733a2f2f6d61696e6e65742e6f7074696d69736d2e696f000000000081830152838501528351676f7074696d69736d60c01b81526009928101929092529251908190036028019020815180519294509092620004969284929091019062000f07565b50602082810151600183015560408301518051620004bb926002850192019062000f07565b50506040805160a081018252600f606082018181526e4f7074696d69736d20476f65726c6960881b608084015282526101a460208084019190915283518085018552601a81527f68747470733a2f2f676f65726c692e6f7074696d69736d2e696f000000000000818301528385015283516e6f7074696d69736d5f676f65726c6960881b8152600992810192909252925190819003602f0190208151805192945090926200056f9284929091019062000f07565b5060208281015160018301556040830151805162000594926002850192019062000f07565b50506040805160a081018252600c606082018181526b417262697472756d204f6e6560a01b6080840152825261a4b160208084019190915283518085018552601c81527f68747470733a2f2f617262312e617262697472756d2e696f2f72706300000000818301528385015283516b617262697472756d5f6f6e6560a01b8152600992810192909252925190819003602c019020815180519294509092620006429284929091019062000f07565b5060208281015160018301556040830151805162000667926002850192019062000f07565b5090505060405180606001604052806040518060400160405280601381526020017f417262697472756d204f6e6520476f65726c6900000000000000000000000000815250815260200162066eed81526020016040518060600160405280602581526020016200186a602591399052604080517f617262697472756d5f6f6e655f676f65726c6900000000000000000000000000815260096013820152905190819003603301902081518051620007279183916020919091019062000f07565b506020828101516001830155604083015180516200074c926002850192019062000f07565b50506040805160a081018252600d606082018181526c417262697472756d204e6f766160981b6080840152825261a4ba60208084019190915283518085018552601c81527f68747470733a2f2f6e6f76612e617262697472756d2e696f2f72706300000000818301528385015283516c617262697472756d5f6e6f766160981b8152600992810192909252925190819003602d019020815180519294509092620007fc9284929091019062000f07565b5060208281015160018301556040830151805162000821926002850192019062000f07565b50506040805160a081018252600760608201818152662837b63cb3b7b760c91b60808401528252608960208084019190915283518085018552601781527f68747470733a2f2f706f6c79676f6e2d7270632e636f6d00000000000000000081830152838501528351663837b63cb3b7b760c91b81526009928101929092529251908190036027019020815180519294509092620008c49284929091019062000f07565b50602082810151600183015560408301518051620008e9926002850192019062000f07565b50506040805160a081018252600e606082018181526d506f6c79676f6e204d756d62616960901b608084015282526201388160208084019190915283518085018552601e81527f68747470733a2f2f7270632d6d756d6261692e6d617469632e746f6461790000818301528385015283516d706f6c79676f6e5f6d756d62616960901b8152600992810192909252925190819003602e0190208151805192945090926200099c9284929091019062000f07565b50602082810151600183015560408301518051620009c1926002850192019062000f07565b509050506040518060600160405280604051806040016040528060098152602001684176616c616e63686560b81b815250815260200161a86a8152602001604051806060016040528060258152602001620017cc60259139905260408051686176616c616e63686560b81b815260098082015290519081900360290190208151805162000a579183916020919091019062000f07565b5060208281015160018301556040830151805162000a7c926002850192019062000f07565b5090505060405180606001604052806040518060400160405280600e81526020016d4176616c616e6368652046756a6960901b815250815260200161a86981526020016040518060600160405280602a81526020016200188f602a91399052604080516d6176616c616e6368655f66756a6960901b81526009600e820152905190819003602e0190208151805162000b1d9183916020919091019062000f07565b5060208281015160018301556040830151805162000b42926002850192019062000f07565b5090505060405180606001604052806040518060400160405280600f81526020016e2127211029b6b0b93a1021b430b4b760891b815250815260200160388152602001604051806060016040528060218152602001620018b9602191399052604080516e3137312fb9b6b0b93a2fb1b430b4b760891b81526009600f820152905190819003602f0190208151805162000be49183916020919091019062000f07565b5060208281015160018301556040830151805162000c09926002850192019062000f07565b5090505060405180606001604052806040518060400160405280601781526020017f424e4220536d61727420436861696e20546573746e65740000000000000000008152508152602001606181526020016040518060600160405280602e81526020016200179e602e91399052604080517f626e625f736d6172745f636861696e5f746573746e657400000000000000000081526009601782015290519081900360370190208151805162000cc79183916020919091019062000f07565b5060208281015160018301556040830151805162000cec926002850192019062000f07565b50506040805160a081018252600c606082018181526b23b737b9b4b99021b430b4b760a11b60808401528252606460208084019190915283518085018552601b81527f68747470733a2f2f7270632e676e6f736973636861696e2e636f6d0000000000818301528385015283516b33b737b9b4b9afb1b430b4b760a11b8152600992810192909252925190819003602c01902081518051929450909262000d999284929091019062000f07565b5060208281015160018301556040830151805162000dbe926002850192019062000f07565b5090505060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316639d2ad72a6040518163ffffffff1660e01b815260040160006040518083038186803b15801562000e2157600080fd5b505afa15801562000e36573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000e609190810190620010c8565b905060005b815181101562000efe5781818151811062000e845762000e84620011fa565b602002602001015160200151600983838151811062000ea75762000ea7620011fa565b60200260200101516000015160405162000ec2919062001210565b9081526020016040518091039020600201908051906020019062000ee892919062000f07565b508062000ef5816200122e565b91505062000e65565b50600091505090565b82805462000f159062001258565b90600052602060002090601f01602090048101928262000f39576000855562000f84565b82601f1062000f5457805160ff191683800117855562000f84565b8280016001018555821562000f84579182015b8281111562000f8457825182559160200191906001019062000f67565b5062000f9292915062000f96565b5090565b5b8082111562000f92576000815560010162000f97565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171562000fe85762000fe862000fad565b60405290565b604051601f8201601f191681016001600160401b038111828210171562001019576200101962000fad565b604052919050565b60005b838110156200103e57818101518382015260200162001024565b838111156200104e576000848401525b50505050565b600082601f8301126200106657600080fd5b81516001600160401b0381111562001082576200108262000fad565b62001097601f8201601f191660200162000fee565b818152846020838601011115620010ad57600080fd5b620010c082602083016020870162001021565b949350505050565b60006020808385031215620010dc57600080fd5b82516001600160401b0380821115620010f457600080fd5b818501915085601f8301126200110957600080fd5b8151818111156200111e576200111e62000fad565b8060051b6200112f85820162000fee565b91825283810185019185810190898411156200114a57600080fd5b86860192505b83831015620011ed578251858111156200116a5760008081fd5b86016040818c03601f1901811315620011835760008081fd5b6200118d62000fc3565b8983015188811115620011a05760008081fd5b620011b08e8c8387010162001054565b825250908201519087821115620011c75760008081fd5b620011d78d8b8486010162001054565b818b015284525050918601919086019062001150565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600082516200122481846020870162001021565b9190910192915050565b60006000198214156200125157634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200126d57607f821691505b602082108114156200128f57634e487b7160e01b600052602260045260246000fd5b50919050565b6104f980620012a56000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063073ce6d31461005c5780634a2b627c14610071578063ba414fa614610079578063d255a82c14610095578063fa7626d4146100a8575b600080fd5b61006f61006a3660046103b9565b6100b5565b005b61006f61012b565b610081610191565b604051901515815260200160405180910390f35b61006f6100a33660046103fc565b6102be565b6007546100819060ff1681565b604051631d7ee55b60e01b815260006004820181905260248201819052604482015273__$b6eaa867eb77413692f14a3d3f685c0cdb$__90631d7ee55b9060640160006040518083038186803b15801561010e57600080fd5b505af4158015610122573d6000803e3d6000fd5b50505050505050565b604051632f0d085360e21b8152610345600482015273__$b6eaa867eb77413692f14a3d3f685c0cdb$__9063bc34214c9060240160006040518083038186803b15801561017757600080fd5b505af415801561018b573d6000803e3d6000fd5b50505050565b600754600090610100900460ff16156101b35750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102b95760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610241917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161046a565b60408051601f198184030181529082905261025b9161048e565b6000604051808303816000865af19150503d8060008114610298576040519150601f19603f3d011682016040523d82523d6000602084013e61029d565b606091505b50915050808060200190518101906102b591906104a1565b9150505b919050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561031c57600080fd5b505af1158015610330573d6000803e3d6000fd5b505060405163af88102960e01b8152600060048201819052602482015273__$b6eaa867eb77413692f14a3d3f685c0cdb$__925063af881029915060440160006040518083038186803b15801561038657600080fd5b505af415801561039a573d6000803e3d6000fd5b505050505050565b80356001600160a01b03811681146102b957600080fd5b6000806000606084860312156103ce57600080fd5b6103d7846103a2565b92506103e5602085016103a2565b91506103f3604085016103a2565b90509250925092565b6000806040838503121561040f57600080fd5b610418836103a2565b9150610426602084016103a2565b90509250929050565b6000815160005b818110156104505760208185018101518683015201610436565b8181111561045f576000828601525b509290920192915050565b6001600160e01b0319831681526000610486600483018461042f565b949350505050565b600061049a828461042f565b9392505050565b6000602082840312156104b357600080fd5b8151801515811461049a57600080fdfea2646970667358221220c8b8db834b0c854cd3c05f73a163c2a0642977601e81b509d4d9b580c9260cc364736f6c6343000808003368747470733a2f2f646174612d736565642d7072656273632d312d73312e62696e616e63652e6f72673a3835343568747470733a2f2f6170692e617661782e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6d61696e6e65742e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692d726f6c6c75702e617262697472756d2e696f2f72706368747470733a2f2f6170692e617661782d746573742e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6273632d6461746173656564312e62696e616e63652e6f7267",
    "sourceMap": "173:505:54:-:0;;;1368:26:18;;;-1:-1:-1;;1368:26:18;1390:4;1368:26;;;640:14:22;:12;:14::i;:::-;610:44;;173:505:54;;;;;;;;;;;;5254:2050:22;5380:46;;;;;;;;;;;;;;;-1:-1:-1;;;5380:46:22;;;;;;5395:5;5380:46;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5380:46:22;5359:18;;-1:-1:-1;;;216:20:64;;5359:9:22;252:11:64;;;5359:18:22;;;;;;;;;;;;;;:67;;;;-1:-1:-1;;5359:67:22;;:18;;:67;;;;:::i;:::-;-1:-1:-1;5359:67:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;5455:48:22;;;;;;;;;;;;;;;-1:-1:-1;;;5455:48:22;;;;;;5472:5;5455:48;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5455:48:22;5432:20;;-1:-1:-1;;;476:22:64;;5432:9:22;514:11:64;;;5432:20:22;;;;;;;;;;;;;;:71;;;;5455:48;;-1:-1:-1;5432:20:22;;:71;;:20;;:71;;;;;:::i;:::-;-1:-1:-1;5432:71:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5532:84;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5532:84:22;;;;;;;5549:1;5532:84;;;;;;;;;;;;;;;;;;;;;;;5509:20;;;-1:-1:-1;;;738:22:64;;5509:9:22;785:1:64;776:11;;5509:20:22;;;;;;;;;;;:107;;;;;;:20;;;:107;;;;;;:::i;:::-;-1:-1:-1;5509:107:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5644:82;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5644:82:22;;;;;;;5660:1;5644:82;;;;;;;;;;;;;;;;;;;;;;;5622:19;;;-1:-1:-1;;;1000:21:64;;5622:9:22;1046:1:64;1037:11;;5622:19:22;;;;;;;;;;;:104;;;;;;:19;;;:104;;;;;;:::i;:::-;-1:-1:-1;5622:104:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;5755:53:22;;;;;;;;;;;;;;;-1:-1:-1;;;5755:53:22;;;;;;5772:8;5755:53;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:53:22;5732:20;;-1:-1:-1;;;1261:22:64;;5732:9:22;1299:11:64;;;5732:20:22;;;;;;;;;;;;;;:76;;;;5755:53;;-1:-1:-1;5732:20:22;;:76;;:20;;:76;;;;;:::i;:::-;-1:-1:-1;5732:76:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;5838:52:22;;;;;;;;;;;;;;;-1:-1:-1;;;5838:52:22;;;;;;5856:2;5838:52;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5838:52:22;5814:21;;-1:-1:-1;;;1523:23:64;;5814:9:22;1562:11:64;;;5814:21:22;;;;;;;;;;;;;;:76;;;;5838:52;;-1:-1:-1;5814:21:22;;:76;;:21;;:76;;;;;:::i;:::-;-1:-1:-1;5814:76:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;5927:59:22;;;;;;;;;;;;;;;-1:-1:-1;;;5927:59:22;;;;;;5952:3;5927:59;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5927:59:22;5896:28;;-1:-1:-1;;;1786:30:64;;5896:9:22;1832:12:64;;;5896:28:22;;;;;;;;;;;;;;:90;;;;5927:59;;-1:-1:-1;5896:28:22;;:90;;:28;;:90;;;;;:::i;:::-;-1:-1:-1;5896:90:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6020:60:22;;;;;;;;;;;;;;;-1:-1:-1;;;6020:60:22;;;;;;6042:5;6020:60;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6020:60:22;5992:25;;-1:-1:-1;;;2057:27:64;;5992:9:22;2100:12:64;;;5992:25:22;;;;;;;;;;;;;;:88;;;;6020:60;;-1:-1:-1;5992:25:22;;:88;;:25;;:88;;;;;:::i;:::-;-1:-1:-1;5992:88:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6121:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6150:6;6121:77;;;;;;;;;;;;;;;;;;;;;;;6086:32;;;2337:21:64;2325:34;;6086:9:22;2384:2:64;2375:12;;6086:32:22;;;;;;;;;;;:112;;;;;;:32;;;:112;;;;;;:::i;:::-;-1:-1:-1;6086:112:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6233:61:22;;;;;;;;;;;;;;;-1:-1:-1;;;6233:61:22;;;;;;6256:5;6233:61;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6233:61:22;6204:26;;-1:-1:-1;;;2600:28:64;;6204:9:22;2644:12:64;;;6204:26:22;;;;;;;;;;;;;;:90;;;;6233:61;;-1:-1:-1;6204:26:22;;:90;;:26;;:90;;;;;:::i;:::-;-1:-1:-1;6204:90:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6323:48:22;;;;;;;;;;;;;;;-1:-1:-1;;;6323:48:22;;;;;;6340:3;6323:48;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6323:48:22;6300:20;;-1:-1:-1;;;2869:22:64;;6300:9:22;2907:11:64;;;6300:20:22;;;;;;;;;;;;;;:71;;;;6323:48;;-1:-1:-1;6300:20:22;;:71;;:20;;:71;;;;;:::i;:::-;-1:-1:-1;6300:71:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6407:64:22;;;;;;;;;;;;;;;-1:-1:-1;;;6407:64:22;;;;;;6431:5;6407:64;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6407:64:22;6377:27;;-1:-1:-1;;;3131:29:64;;6377:9:22;3176:12:64;;;6377:27:22;;;;;;;;;;;;;;:94;;;;6407:64;;-1:-1:-1;6377:27:22;;:94;;:27;;:94;;;;;:::i;:::-;-1:-1:-1;6377:94:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6502:66;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6502:66:22;;;;;;;6521:5;6502:66;;;;;;;;;;;;;;;;;;;;;;;6477:22;;;-1:-1:-1;;;3401:24:64;;6477:9:22;3441:11:64;;;6477:22:22;;;;;;;;;;;:91;;;;;;:22;;;:91;;;;;;:::i;:::-;-1:-1:-1;6477:91:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6604:76;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6604:76:22;;;;;;;6628:5;6604:76;;;;;;;;;;;;;;;;;;;;;;;6574:27;;;-1:-1:-1;;;3665:29:64;;6574:9:22;3719:2:64;3710:12;;6574:27:22;;;;;;;;;;;:106;;;;;;:27;;;:106;;;;;;:::i;:::-;-1:-1:-1;6574:106:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6717:65;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6717:65:22;;;;;;;6742:2;6717:65;;;;;;;;;;;;;;;;;;;;;;;6686:28;;;-1:-1:-1;;;3935:30:64;;6686:9:22;3990:2:64;3981:12;;6686:28:22;;;;;;;;;;;:96;;;;;;:28;;;:96;;;;;;:::i;:::-;-1:-1:-1;6686:96:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6827:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6873:2;6827:110;;;;;;;;;;;;;;;;;;;;;;;6788:36;;;4218:25:64;4206:38;;6788:9:22;4269:2:64;4260:12;;6788:36:22;;;;;;;;;;;:149;;;;;;:36;;;:149;;;;;;:::i;:::-;-1:-1:-1;6788:149:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6997:57:22;;;;;;;;;;;;;;;-1:-1:-1;;;6997:57:22;;;;;;7019:3;6997:57;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6997:57:22;6969:25;;-1:-1:-1;;;4485:27:64;;6969:9:22;4528:12:64;;;6969:25:22;;;;;;;;;;;;;;:85;;;;6997:57;;-1:-1:-1;6969:25:22;;:85;;:25;;:85;;;;;:::i;:::-;-1:-1:-1;6969:85:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7138:20;243:28;235:37;;-1:-1:-1;;;;;7161:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7161:18:22;;;;;;;;;;;;:::i;:::-;7138:41;;7190:9;7185:101;7209:4;:11;7205:1;:15;7185:101;;;7268:4;7273:1;7268:7;;;;;;;;:::i;:::-;;;;;;;:11;;;7235:9;7245:4;7250:1;7245:7;;;;;;;;:::i;:::-;;;;;;;:12;;;7235:23;;;;;;:::i;:::-;;;;;;;;;;;;;:30;;:44;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7222:3:22;;;;:::i;:::-;;;;7185:101;;;;7298:1;7291:8;;;5254:2050;:::o;173:505:54:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;173:505:54;;;-1:-1:-1;173:505:54;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;4551:127:64;4612:10;4607:3;4603:20;4600:1;4593:31;4643:4;4640:1;4633:15;4667:4;4664:1;4657:15;4683:257;4755:4;4749:11;;;4787:17;;-1:-1:-1;;;;;4819:34:64;;4855:22;;;4816:62;4813:88;;;4881:18;;:::i;:::-;4917:4;4910:24;4683:257;:::o;4945:275::-;5016:2;5010:9;5081:2;5062:13;;-1:-1:-1;;5058:27:64;5046:40;;-1:-1:-1;;;;;5101:34:64;;5137:22;;;5098:62;5095:88;;;5163:18;;:::i;:::-;5199:2;5192:22;4945:275;;-1:-1:-1;4945:275:64:o;5225:258::-;5297:1;5307:113;5321:6;5318:1;5315:13;5307:113;;;5397:11;;;5391:18;5378:11;;;5371:39;5343:2;5336:10;5307:113;;;5438:6;5435:1;5432:13;5429:48;;;5473:1;5464:6;5459:3;5455:16;5448:27;5429:48;;5225:258;;;:::o;5488:497::-;5542:5;5595:3;5588:4;5580:6;5576:17;5572:27;5562:55;;5613:1;5610;5603:12;5562:55;5636:13;;-1:-1:-1;;;;;5661:26:64;;5658:52;;;5690:18;;:::i;:::-;5734:55;5777:2;5758:13;;-1:-1:-1;;5754:27:64;5783:4;5750:38;5734:55;:::i;:::-;5814:2;5805:7;5798:19;5860:3;5853:4;5848:2;5840:6;5836:15;5832:26;5829:35;5826:55;;;5877:1;5874;5867:12;5826:55;5890:64;5951:2;5944:4;5935:7;5931:18;5924:4;5916:6;5912:17;5890:64;:::i;:::-;5972:7;5488:497;-1:-1:-1;;;;5488:497:64:o;5990:1910::-;6107:6;6138:2;6181;6169:9;6160:7;6156:23;6152:32;6149:52;;;6197:1;6194;6187:12;6149:52;6224:16;;-1:-1:-1;;;;;6289:14:64;;;6286:34;;;6316:1;6313;6306:12;6286:34;6354:6;6343:9;6339:22;6329:32;;6399:7;6392:4;6388:2;6384:13;6380:27;6370:55;;6421:1;6418;6411:12;6370:55;6450:2;6444:9;6472:2;6468;6465:10;6462:36;;;6478:18;;:::i;:::-;6524:2;6521:1;6517:10;6547:28;6571:2;6567;6563:11;6547:28;:::i;:::-;6609:15;;;6679:11;;;6675:20;;;6640:12;;;;6707:19;;;6704:39;;;6739:1;6736;6729:12;6704:39;6771:2;6767;6763:11;6752:22;;6783:1087;6799:6;6794:3;6791:15;6783:1087;;;6878:3;6872:10;6914:2;6901:11;6898:19;6895:109;;;6958:1;6987:2;6983;6976:14;6895:109;7027:20;;7070:4;7098:16;;;-1:-1:-1;;7094:30:64;7090:39;-1:-1:-1;7087:129:64;;;7170:1;7199:2;7195;7188:14;7087:129;7242:22;;:::i;:::-;7307:2;7303;7299:11;7293:18;7340:2;7330:8;7327:16;7324:109;;;7385:1;7415:3;7410;7403:16;7324:109;7460:65;7517:7;7512:2;7501:8;7497:2;7493:17;7489:26;7460:65;:::i;:::-;7446:80;;-1:-1:-1;7561:11:64;;;7555:18;;7589:16;;;7586:109;;;7647:1;7677:3;7672;7665:16;7586:109;7731:65;7788:7;7783:2;7772:8;7768:2;7764:17;7760:26;7731:65;:::i;:::-;7715:14;;;7708:89;7810:18;;-1:-1:-1;;6816:12:64;;;;7848;;;;6783:1087;;;7889:5;5990:1910;-1:-1:-1;;;;;;;;;5990:1910:64:o;7905:127::-;7966:10;7961:3;7957:20;7954:1;7947:31;7997:4;7994:1;7987:15;8021:4;8018:1;8011:15;8037:276;8168:3;8206:6;8200:13;8222:53;8268:6;8263:3;8256:4;8248:6;8244:17;8222:53;:::i;:::-;8291:16;;;;;8037:276;-1:-1:-1;;8037:276:64:o;8318:232::-;8357:3;-1:-1:-1;;8378:17:64;;8375:140;;;8437:10;8432:3;8428:20;8425:1;8418:31;8472:4;8469:1;8462:15;8500:4;8497:1;8490:15;8375:140;-1:-1:-1;8542:1:64;8531:13;;8318:232::o;8555:380::-;8634:1;8630:12;;;;8677;;;8698:61;;8752:4;8744:6;8740:17;8730:27;;8698:61;8805:2;8797:6;8794:14;8774:18;8771:38;8768:161;;;8851:10;8846:3;8842:20;8839:1;8832:31;8886:4;8883:1;8876:15;8914:4;8911:1;8904:15;8768:161;;8555:380;;;:::o;:::-;173:505:54;;;;;;",
    "linkReferences": {
      "test/wrappedContracts/OptionPairExt.sol": {
        "OptionPairExt": [
          {
            "start": 4990,
            "length": 20
          },
          {
            "start": 5095,
            "length": 20
          },
          {
            "start": 5620,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063073ce6d31461005c5780634a2b627c14610071578063ba414fa614610079578063d255a82c14610095578063fa7626d4146100a8575b600080fd5b61006f61006a3660046103b9565b6100b5565b005b61006f61012b565b610081610191565b604051901515815260200160405180910390f35b61006f6100a33660046103fc565b6102be565b6007546100819060ff1681565b604051631d7ee55b60e01b815260006004820181905260248201819052604482015273__$b6eaa867eb77413692f14a3d3f685c0cdb$__90631d7ee55b9060640160006040518083038186803b15801561010e57600080fd5b505af4158015610122573d6000803e3d6000fd5b50505050505050565b604051632f0d085360e21b8152610345600482015273__$b6eaa867eb77413692f14a3d3f685c0cdb$__9063bc34214c9060240160006040518083038186803b15801561017757600080fd5b505af415801561018b573d6000803e3d6000fd5b50505050565b600754600090610100900460ff16156101b35750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156102b95760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610241917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161046a565b60408051601f198184030181529082905261025b9161048e565b6000604051808303816000865af19150503d8060008114610298576040519150601f19603f3d011682016040523d82523d6000602084013e61029d565b606091505b50915050808060200190518101906102b591906104a1565b9150505b919050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561031c57600080fd5b505af1158015610330573d6000803e3d6000fd5b505060405163af88102960e01b8152600060048201819052602482015273__$b6eaa867eb77413692f14a3d3f685c0cdb$__925063af881029915060440160006040518083038186803b15801561038657600080fd5b505af415801561039a573d6000803e3d6000fd5b505050505050565b80356001600160a01b03811681146102b957600080fd5b6000806000606084860312156103ce57600080fd5b6103d7846103a2565b92506103e5602085016103a2565b91506103f3604085016103a2565b90509250925092565b6000806040838503121561040f57600080fd5b610418836103a2565b9150610426602084016103a2565b90509250929050565b6000815160005b818110156104505760208185018101518683015201610436565b8181111561045f576000828601525b509290920192915050565b6001600160e01b0319831681526000610486600483018461042f565b949350505050565b600061049a828461042f565b9392505050565b6000602082840312156104b357600080fd5b8151801515811461049a57600080fdfea2646970667358221220c8b8db834b0c854cd3c05f73a163c2a0642977601e81b509d4d9b580c9260cc364736f6c63430008080033",
    "sourceMap": "173:505:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:174;;;;;;:::i;:::-;;:::i;:::-;;211:108;;;:::i;1609:436:18:-;;;:::i;:::-;;;696:14:64;;689:22;671:41;;659:2;644:18;1609:436:18;;;;;;;325:171:54;;;;;;:::i;:::-;;:::i;1368:26:18:-;;;;;;;;;502:174:54;602:67;;-1:-1:-1;;;602:67:54;;642:1;602:67;;;1236:34:64;;;1286:18;;;1279:43;;;1338:18;;;1331:43;602:13:54;;:31;;1171:18:64;;602:67:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:174;;;:::o;211:108::-;263:49;;-1:-1:-1;;;263:49:54;;305:5;263:49;;;1539:51:64;263:13:54;;:33;;1512:18:64;;263:49:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;211:108::o;1609:436:18:-;1659:7;;1643:4;;1659:7;;;;;1655:386;;;-1:-1:-1;1683:7:18;;;;;;;;1609:436::o;1655:386::-;1711:17;2545:42;2533:55;2606:16;1744:264;;1893:43;;;1455:64;1893:43;;;1775:51:64;;;-1:-1:-1;;;1842:18:64;;;1835:34;1893:43:18;;;;;;;;;1748:18:64;;;1893:43:18;;;-1:-1:-1;;1455:64:18;;1832:105;;1856:34;;1832:105;;;:::i;:::-;;;;-1:-1:-1;;1832:105:18;;;;;;;;;;1803:144;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1776:171;;;1983:7;1972:27;;;;;;;;;;;;:::i;:::-;1957:42;;1766:242;1744:264;2022:12;1609:436;-1:-1:-1;1609:436:18:o;325:171:54:-;211:28:19;203:37;;-1:-1:-1;;;;;406:15:54;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;433:56:54;;-1:-1:-1;;;433:56:54;;474:1;433:56;;;3200:34:64;;;3250:18;;;3243:43;433:13:54;;-1:-1:-1;433:32:54;;-1:-1:-1;3135:18:64;;433:56:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:171;;:::o;14:173:64:-;82:20;;-1:-1:-1;;;;;131:31:64;;121:42;;111:70;;177:1;174;167:12;192:334;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;482:38;516:2;505:9;501:18;482:38;:::i;:::-;472:48;;192:334;;;;;:::o;723:260::-;791:6;799;852:2;840:9;831:7;827:23;823:32;820:52;;;868:1;865;858:12;820:52;891:29;910:9;891:29;:::i;:::-;881:39;;939:38;973:2;962:9;958:18;939:38;:::i;:::-;929:48;;723:260;;;;;:::o;1880:336::-;1921:3;1959:5;1953:12;1983:1;1993:128;2007:6;2004:1;2001:13;1993:128;;;2104:4;2089:13;;;2085:24;;2079:31;2066:11;;;2059:52;2022:12;1993:128;;;2139:6;2136:1;2133:13;2130:48;;;2174:1;2165:6;2160:3;2156:16;2149:27;2130:48;-1:-1:-1;2194:16:64;;;;;1880:336;-1:-1:-1;;1880:336:64:o;2221:278::-;-1:-1:-1;;;;;;2406:33:64;;2394:46;;2376:3;2456:37;2490:1;2481:11;;2473:6;2456:37;:::i;:::-;2449:44;2221:278;-1:-1:-1;;;;2221:278:64:o;2504:189::-;2633:3;2658:29;2683:3;2675:6;2658:29;:::i;:::-;2651:36;2504:189;-1:-1:-1;;;2504:189:64:o;2698:277::-;2765:6;2818:2;2806:9;2797:7;2793:23;2789:32;2786:52;;;2834:1;2831;2824:12;2786:52;2866:9;2860:16;2919:5;2912:13;2905:21;2898:5;2895:32;2885:60;;2941:1;2938;2931:12",
    "linkReferences": {
      "test/wrappedContracts/OptionPairExt.sol": {
        "OptionPairExt": [
          {
            "start": 217,
            "length": 20
          },
          {
            "start": 322,
            "length": 20
          },
          {
            "start": 847,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "testCheckCorrectFormat(address,address)": "d255a82c",
    "testCheckDoesNotExist(address,address,address)": "073ce6d3",
    "testCheckNotZeroAddress()": "4a2b627c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"testCheckCorrectFormat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"optionPair\",\"type\":\"address\"}],\"name\":\"testCheckDoesNotExist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCheckNotZeroAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/OptionPair.t.sol\":\"OptionPairTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=../../node_modules/@ensdomains/\",\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":@timeswap-labs/=../\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=../../node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=../../node_modules/hardhat/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xed7c5a720826fa16b577eedaff5a93e8f172d14a64ccf532270b93c3e086576f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3d2e31ddef91bb3f7ee2348be96b03cf05edf9c6f7167f895ac64a6ddd3615d2\",\"dweb:/ipfs/QmYJhewd6FVYsE6VS82kCegLNR7mffMyq3ek4vWXRFwgJv\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x490fc502b097f02833847425234ed07e84993bb2488f68ae89a3676460b1abf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b6ae82aa8f4fa0bd0cc385ca5db24734e7ddcce43b01d5a7153c1fa85f20b08\",\"dweb:/ipfs/QmQR2NfB5vkpGsujphZPPXLVHjhExLa5NHkfdBoQHSE6Rt\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xfbe076731a891ac91f26f4e04bd367bbc33b60f337660b080bd4e007b8345897\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://338cf74c3cac128a24a1036e1bd04e44b6e62faf01306b6bd2180d92084b39b6\",\"dweb:/ipfs/QmaMsmD1oQnMA16LVzVJ9xiLNi9tN7JiH2hmvMHoWB8NNe\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x6c7d8b2fefa3054cbd5df8a8ca3b540e064307944458b6040a6418fc7a3a2838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df2a8aaf4a41b9cf0f5c8c1bb991d9c016ea69598913bbafe5334e5622206d54\",\"dweb:/ipfs/QmPq4Tvc41WceVXG6DjceLKwfUSb8x2kMFFLs1e1aykEBX\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x8a12410ba0293eafd5deb38ad57efee493da4c573b287c70ad696cb39141842e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d6b7b85bd75db1780a0a984106632cf446a8969ed86f167b379988937857c8e\",\"dweb:/ipfs/QmaTQ7LMHdvnZW4HWjAGBitDd7Rky9sPszrZCXFuvduNoy\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0x77fb0308b8b96db709ce66234e7ecc16cb4f29c76339fcbc6f2c3bd7108afe5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://886204b2c507e32df13fd6d797766c9f0e63d66627012ba526a765d4e2fb5ff3\",\"dweb:/ipfs/QmRJYuwTcCkTkaAa1xFb1h7dhs9jgx221fhQPwA5eHTaua\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x796b090517c58f9aa97b8cb5e17dfa62e2a719a0ab0fab59f76b83a1d27fc6ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a58d4ba2277b8f84b6ea8e49d5e2ecf65bca29c8e1b81e47a1a4ecbb358b2384\",\"dweb:/ipfs/QmUVQgNz2KWrjykdAjc9AWGvkmMxhj4oGos6b7Kr7fn1vZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x78eac35bcdc3afa2e99e9c10cbe91e54b1064a33ebf6e56bc2f8653d94eaa855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b9849267d16a5549d4403788b098a97d2948051feb8cf60baabb2a78b36a62d\",\"dweb:/ipfs/QmUh1LVezxxnFwoucEeKeVVkDEZztyZnU7cKggd8coHHA8\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xc1c672b0fd122922ec4d2820442d6b0bc99408b181597a9ebc2397155e0e4e6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c12375fb81a73cbb876a875c25511bbfc9e6e1bbca3f8a9be8a122e5f0450934\",\"dweb:/ipfs/Qmb8GqUCBV9fXaVP6zwmu4KrVw971ga86gi7HLiXSQJCkS\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x1cdc62c82ad67c3c08dd68a9b5c2a4c335074730e582f6fb187fe714cbb39949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://691fda4d4515363f69bc196028a64c372d0275e2c94d3b9dae6c6d349a2d9d30\",\"dweb:/ipfs/QmNsjU773piJwp9LsdQ8AtrzC5riztJk4LHPQyp5QeP3UJ\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x22c7394d3458b654727c2bf66eb9fff3988da6ad9b5004c56f2e835174792060\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf838316718e61cde42cd0bdd83fc3ee2ef4090e9275e30a97ca500f75550\",\"dweb:/ipfs/QmUkDJ151bCP9ueZCZuommjwADXdxTgUNPg6fU3B47CcUG\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x36a83bc7f4e919543c502ca8027cd001527c3d0f83b3eb649acdd6101c0cc109\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3565d5a3cfc3d11faad5da9d7cb59f913ffaa60c1c242599133c08e471756348\",\"dweb:/ipfs/QmZDhCAHWp9WYeKYttmpHgdtb4kHhsVTonLvfkExetiTC6\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xad478f1366bccc7fdb93db12c4c7422fbb1121a20d702b8d77b9a568640e2a2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1928d6067432ce3ea4c0c98de4acb38aa550ce46fdd3c0c1f150e0146ce4026\",\"dweb:/ipfs/QmfLnGSpdUXbwkTwWDRhfiS4pTgevCn5cTXJyVRRqARZws\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x26bbb37d8d7b9f423f55a189cc966e28dd2d026fae9c47c040cbf2fd5cca696a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b7daaa62ffce75b7458e4497db1e9245fd7fd2c4613d4fc4e7c6e5c6af5e930\",\"dweb:/ipfs/QmQk6P3ViskGng6RkhWQ6R5LHWjH59sFkLxdJ6ux7S9my6\"]},\"src/libraries/OptionPair.sol\":{\"keccak256\":\"0x3e557cd8b92e0ad860026f6dfbe4cee5e8734b5054f3afb639407af1e70b9720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1338d1645191e50ff6c51eb9c2afa8ecbf14219b679e7575eedb8a8e6856b2a3\",\"dweb:/ipfs/QmUSDT9RyrwKg9tJ2gisTThvqQ7HRt4WC6n3c4wBSynbhy\"]},\"test/OptionPair.t.sol\":{\"keccak256\":\"0x248912068f6b22be29239d0ac595c3510ec20058d015b6db97fea3f69fb3aa03\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0d1092094c0dbb0bba054c503303312ca4f858ddca2311acce8ebf8c77a6e37a\",\"dweb:/ipfs/QmcpgypTHdhGQwCxg8UXsS1VzkXmeh1Wzzgxiwri2WYgW4\"]},\"test/wrappedContracts/OptionPairExt.sol\":{\"keccak256\":\"0x807fcf98d4b8bb58a8e850c05301b970ea71712d40106aea59d5408007724ebb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3e30446b163d72f3a4422822ae96b10456ddffe92b80ae60b433c44cbcfeacdb\",\"dweb:/ipfs/QmYhQczg4n3Zb6t2b2PsYLLoM3TvWWgqUx8xRzbgdiX566\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.8+commit.dddeac2f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCheckCorrectFormat"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "optionPair",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCheckDoesNotExist"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCheckNotZeroAddress"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=../../node_modules/@ensdomains/",
        ":@openzeppelin/=../../node_modules/@openzeppelin/",
        ":@timeswap-labs/=../",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=../../node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=../../node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/OptionPair.t.sol": "OptionPairTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xed7c5a720826fa16b577eedaff5a93e8f172d14a64ccf532270b93c3e086576f",
        "urls": [
          "bzz-raw://3d2e31ddef91bb3f7ee2348be96b03cf05edf9c6f7167f895ac64a6ddd3615d2",
          "dweb:/ipfs/QmYJhewd6FVYsE6VS82kCegLNR7mffMyq3ek4vWXRFwgJv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x490fc502b097f02833847425234ed07e84993bb2488f68ae89a3676460b1abf6",
        "urls": [
          "bzz-raw://4b6ae82aa8f4fa0bd0cc385ca5db24734e7ddcce43b01d5a7153c1fa85f20b08",
          "dweb:/ipfs/QmQR2NfB5vkpGsujphZPPXLVHjhExLa5NHkfdBoQHSE6Rt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xfbe076731a891ac91f26f4e04bd367bbc33b60f337660b080bd4e007b8345897",
        "urls": [
          "bzz-raw://338cf74c3cac128a24a1036e1bd04e44b6e62faf01306b6bd2180d92084b39b6",
          "dweb:/ipfs/QmaMsmD1oQnMA16LVzVJ9xiLNi9tN7JiH2hmvMHoWB8NNe"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x6c7d8b2fefa3054cbd5df8a8ca3b540e064307944458b6040a6418fc7a3a2838",
        "urls": [
          "bzz-raw://df2a8aaf4a41b9cf0f5c8c1bb991d9c016ea69598913bbafe5334e5622206d54",
          "dweb:/ipfs/QmPq4Tvc41WceVXG6DjceLKwfUSb8x2kMFFLs1e1aykEBX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x8a12410ba0293eafd5deb38ad57efee493da4c573b287c70ad696cb39141842e",
        "urls": [
          "bzz-raw://2d6b7b85bd75db1780a0a984106632cf446a8969ed86f167b379988937857c8e",
          "dweb:/ipfs/QmaTQ7LMHdvnZW4HWjAGBitDd7Rky9sPszrZCXFuvduNoy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0x77fb0308b8b96db709ce66234e7ecc16cb4f29c76339fcbc6f2c3bd7108afe5c",
        "urls": [
          "bzz-raw://886204b2c507e32df13fd6d797766c9f0e63d66627012ba526a765d4e2fb5ff3",
          "dweb:/ipfs/QmRJYuwTcCkTkaAa1xFb1h7dhs9jgx221fhQPwA5eHTaua"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x796b090517c58f9aa97b8cb5e17dfa62e2a719a0ab0fab59f76b83a1d27fc6ca",
        "urls": [
          "bzz-raw://a58d4ba2277b8f84b6ea8e49d5e2ecf65bca29c8e1b81e47a1a4ecbb358b2384",
          "dweb:/ipfs/QmUVQgNz2KWrjykdAjc9AWGvkmMxhj4oGos6b7Kr7fn1vZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0x78eac35bcdc3afa2e99e9c10cbe91e54b1064a33ebf6e56bc2f8653d94eaa855",
        "urls": [
          "bzz-raw://6b9849267d16a5549d4403788b098a97d2948051feb8cf60baabb2a78b36a62d",
          "dweb:/ipfs/QmUh1LVezxxnFwoucEeKeVVkDEZztyZnU7cKggd8coHHA8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xc1c672b0fd122922ec4d2820442d6b0bc99408b181597a9ebc2397155e0e4e6d",
        "urls": [
          "bzz-raw://c12375fb81a73cbb876a875c25511bbfc9e6e1bbca3f8a9be8a122e5f0450934",
          "dweb:/ipfs/Qmb8GqUCBV9fXaVP6zwmu4KrVw971ga86gi7HLiXSQJCkS"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x1cdc62c82ad67c3c08dd68a9b5c2a4c335074730e582f6fb187fe714cbb39949",
        "urls": [
          "bzz-raw://691fda4d4515363f69bc196028a64c372d0275e2c94d3b9dae6c6d349a2d9d30",
          "dweb:/ipfs/QmNsjU773piJwp9LsdQ8AtrzC5riztJk4LHPQyp5QeP3UJ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x22c7394d3458b654727c2bf66eb9fff3988da6ad9b5004c56f2e835174792060",
        "urls": [
          "bzz-raw://90faf838316718e61cde42cd0bdd83fc3ee2ef4090e9275e30a97ca500f75550",
          "dweb:/ipfs/QmUkDJ151bCP9ueZCZuommjwADXdxTgUNPg6fU3B47CcUG"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x36a83bc7f4e919543c502ca8027cd001527c3d0f83b3eb649acdd6101c0cc109",
        "urls": [
          "bzz-raw://3565d5a3cfc3d11faad5da9d7cb59f913ffaa60c1c242599133c08e471756348",
          "dweb:/ipfs/QmZDhCAHWp9WYeKYttmpHgdtb4kHhsVTonLvfkExetiTC6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xad478f1366bccc7fdb93db12c4c7422fbb1121a20d702b8d77b9a568640e2a2c",
        "urls": [
          "bzz-raw://d1928d6067432ce3ea4c0c98de4acb38aa550ce46fdd3c0c1f150e0146ce4026",
          "dweb:/ipfs/QmfLnGSpdUXbwkTwWDRhfiS4pTgevCn5cTXJyVRRqARZws"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x26bbb37d8d7b9f423f55a189cc966e28dd2d026fae9c47c040cbf2fd5cca696a",
        "urls": [
          "bzz-raw://1b7daaa62ffce75b7458e4497db1e9245fd7fd2c4613d4fc4e7c6e5c6af5e930",
          "dweb:/ipfs/QmQk6P3ViskGng6RkhWQ6R5LHWjH59sFkLxdJ6ux7S9my6"
        ],
        "license": "MIT"
      },
      "src/libraries/OptionPair.sol": {
        "keccak256": "0x3e557cd8b92e0ad860026f6dfbe4cee5e8734b5054f3afb639407af1e70b9720",
        "urls": [
          "bzz-raw://1338d1645191e50ff6c51eb9c2afa8ecbf14219b679e7575eedb8a8e6856b2a3",
          "dweb:/ipfs/QmUSDT9RyrwKg9tJ2gisTThvqQ7HRt4WC6n3c4wBSynbhy"
        ],
        "license": "Unlicense"
      },
      "test/OptionPair.t.sol": {
        "keccak256": "0x248912068f6b22be29239d0ac595c3510ec20058d015b6db97fea3f69fb3aa03",
        "urls": [
          "bzz-raw://0d1092094c0dbb0bba054c503303312ca4f858ddca2311acce8ebf8c77a6e37a",
          "dweb:/ipfs/QmcpgypTHdhGQwCxg8UXsS1VzkXmeh1Wzzgxiwri2WYgW4"
        ],
        "license": "UNLICENSED"
      },
      "test/wrappedContracts/OptionPairExt.sol": {
        "keccak256": "0x807fcf98d4b8bb58a8e850c05301b970ea71712d40106aea59d5408007724ebb",
        "urls": [
          "bzz-raw://3e30446b163d72f3a4422822ae96b10456ddffe92b80ae60b433c44cbcfeacdb",
          "dweb:/ipfs/QmYhQczg4n3Zb6t2b2PsYLLoM3TvWWgqUx8xRzbgdiX566"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/OptionPair.t.sol",
    "id": 31901,
    "exportedSymbols": {
      "CommonBase": [
        5513
      ],
      "DSTest": [
        5481
      ],
      "OptionPairExt": [
        35406
      ],
      "OptionPairLibrary": [
        30389
      ],
      "OptionPairTest": [
        31900
      ],
      "StdAssertions": [
        6339
      ],
      "StdCheats": [
        8452
      ],
      "StdStorage": [
        9359
      ],
      "StdUtils": [
        11222
      ],
      "Test": [
        11253
      ],
      "TestBase": [
        11242
      ],
      "Vm": [
        12227
      ],
      "console": [
        20291
      ],
      "console2": [
        28356
      ],
      "stdError": [
        8518
      ],
      "stdJson": [
        9184
      ],
      "stdMath": [
        9328
      ],
      "stdStorage": [
        10793
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:640:54",
    "nodes": [
      {
        "id": 31828,
        "nodeType": "PragmaDirective",
        "src": "39:23:54",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".8"
        ]
      },
      {
        "id": 31829,
        "nodeType": "ImportDirective",
        "src": "64:28:54",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31901,
        "sourceUnit": 11254,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31830,
        "nodeType": "ImportDirective",
        "src": "93:31:54",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31901,
        "sourceUnit": 20292,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31831,
        "nodeType": "ImportDirective",
        "src": "125:46:54",
        "nodes": [],
        "absolutePath": "test/wrappedContracts/OptionPairExt.sol",
        "file": "./wrappedContracts/OptionPairExt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31901,
        "sourceUnit": 35407,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31900,
        "nodeType": "ContractDefinition",
        "src": "173:505:54",
        "nodes": [
          {
            "id": 31846,
            "nodeType": "FunctionDefinition",
            "src": "211:108:54",
            "nodes": [],
            "body": {
              "id": 31845,
              "nodeType": "Block",
              "src": "253:66:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3078333435",
                            "id": 31841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "305:5:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_837_by_1",
                              "typeString": "int_const 837"
                            },
                            "value": "0x345"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_837_by_1",
                              "typeString": "int_const 837"
                            }
                          ],
                          "id": 31840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "297:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31839,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "297:7:54",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "297:14:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31836,
                        "name": "OptionPairExt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35406,
                        "src": "263:13:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptionPairExt_$35406_$",
                          "typeString": "type(library OptionPairExt)"
                        }
                      },
                      "id": 31838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkNotZeroAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35374,
                      "src": "263:33:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 31843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "263:49:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31844,
                  "nodeType": "ExpressionStatement",
                  "src": "263:49:54"
                }
              ]
            },
            "functionSelector": "4a2b627c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCheckNotZeroAddress",
            "nameLocation": "220:23:54",
            "parameters": {
              "id": 31834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "243:2:54"
            },
            "returnParameters": {
              "id": 31835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "253:0:54"
            },
            "scope": 31900,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31872,
            "nodeType": "FunctionDefinition",
            "src": "325:171:54",
            "nodes": [],
            "body": {
              "id": 31871,
              "nodeType": "Block",
              "src": "396:100:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31853,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5512,
                        "src": "406:2:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12227",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11999,
                      "src": "406:15:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 31856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "406:17:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31857,
                  "nodeType": "ExpressionStatement",
                  "src": "406:17:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 31863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "474:1:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "466:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31861,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "466:7:54",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "466:10:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 31867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "486:1:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "478:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31865,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "478:7:54",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "478:10:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31858,
                        "name": "OptionPairExt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35406,
                        "src": "433:13:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptionPairExt_$35406_$",
                          "typeString": "type(library OptionPairExt)"
                        }
                      },
                      "id": 31860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkCorrectFormat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35388,
                      "src": "433:32:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) pure"
                      }
                    },
                    "id": 31869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "433:56:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31870,
                  "nodeType": "ExpressionStatement",
                  "src": "433:56:54"
                }
              ]
            },
            "functionSelector": "d255a82c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCheckCorrectFormat",
            "nameLocation": "334:22:54",
            "parameters": {
              "id": 31851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31848,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "365:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 31872,
                  "src": "357:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31850,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "381:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 31872,
                  "src": "373:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:32:54"
            },
            "returnParameters": {
              "id": 31852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:54"
            },
            "scope": 31900,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31899,
            "nodeType": "FunctionDefinition",
            "src": "502:174:54",
            "nodes": [],
            "body": {
              "id": 31898,
              "nodeType": "Block",
              "src": "592:84:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 31886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "642:1:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "634:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31884,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "634:7:54",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "634:10:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 31890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "654:1:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "646:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31888,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "646:7:54",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "646:10:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 31894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "666:1:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 31893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "658:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31892,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "658:7:54",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "658:10:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 31881,
                        "name": "OptionPairExt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35406,
                        "src": "602:13:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptionPairExt_$35406_$",
                          "typeString": "type(library OptionPairExt)"
                        }
                      },
                      "id": 31883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkDoesNotExist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35405,
                      "src": "602:31:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address) pure"
                      }
                    },
                    "id": 31896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:67:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31897,
                  "nodeType": "ExpressionStatement",
                  "src": "602:67:54"
                }
              ]
            },
            "functionSelector": "073ce6d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCheckDoesNotExist",
            "nameLocation": "511:21:54",
            "parameters": {
              "id": 31879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31874,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "541:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 31899,
                  "src": "533:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31876,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "557:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 31899,
                  "src": "549:14:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31878,
                  "mutability": "mutable",
                  "name": "optionPair",
                  "nameLocation": "573:10:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 31899,
                  "src": "565:18:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "532:52:54"
            },
            "returnParameters": {
              "id": 31880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:0:54"
            },
            "scope": 31900,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31832,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11253,
              "src": "200:4:54"
            },
            "id": 31833,
            "nodeType": "InheritanceSpecifier",
            "src": "200:4:54"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31900,
          11253,
          11222,
          8452,
          8063,
          6339,
          5481,
          11242,
          5513
        ],
        "name": "OptionPairTest",
        "nameLocation": "182:14:54",
        "scope": 31901,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 54
}