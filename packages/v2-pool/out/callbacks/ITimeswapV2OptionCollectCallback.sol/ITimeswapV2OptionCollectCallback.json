{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "strike",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maturity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "token0Amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "token1Amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TimeswapV2OptionCollectCallbackParam",
          "name": "param",
          "type": "tuple"
        }
      ],
      "name": "timeswapV2OptionCollectCallback",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "timeswapV2OptionCollectCallback((uint256,uint256,uint256,uint256,uint256,bytes))": "dc6fddcf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strike\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TimeswapV2OptionCollectCallbackParam\",\"name\":\"param\",\"type\":\"tuple\"}],\"name\":\"timeswapV2OptionCollectCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"timeswapV2OptionCollectCallback((uint256,uint256,uint256,uint256,uint256,bytes))\":{\"details\":\"In the implementation, you must have enough short positions for the collect transaction. The caller of this method must be checked to be a Timeswap V2 Option pair deployed by the canonical Timeswap V2 Factory.The token0 and token1 will already transferred to the receipients.\",\"params\":{\"param\":\"The parameter of the callback.\"},\"returns\":{\"data\":\"The bytes code returned from the callback.\"}}},\"title\":\"Callback for ITimeswapV2Option#collect\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"timeswapV2OptionCollectCallback((uint256,uint256,uint256,uint256,uint256,bytes))\":{\"notice\":\"Called to `msg.sender` after initiating a collect from ITimeswapV2Option#collect.\"}},\"notice\":\"Any contract that calls ITimeswapV2Option#collect can optionally implement this interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"../v2-option/src/interfaces/callbacks/ITimeswapV2OptionCollectCallback.sol\":\"ITimeswapV2OptionCollectCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=../../node_modules/@ensdomains/\",\":@openzeppelin/=../../node_modules/@openzeppelin/\",\":@timeswap-labs/=../\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=../../node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=../../node_modules/hardhat/\"]},\"sources\":{\"../v2-option/src/interfaces/callbacks/ITimeswapV2OptionCollectCallback.sol\":{\"keccak256\":\"0x6900e91a9f6ed3d170373a890a250c587c74d5ec6227ed8757a71f1d5b2b102d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eb1b00ad6049942529256a8be74335c52d0a4fc7d7613b798bb8a34051292323\",\"dweb:/ipfs/QmUocGzkpcBBH3EEpt31A6aun7sMWRJvnLPTtE1orq3Fs1\"]},\"../v2-option/src/structs/CallbackParam.sol\":{\"keccak256\":\"0x981dbd1ff1e45f14fe6c7a8910908bc011f9645b589266aab14e9dc508fd1ead\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://044d6a6c0169d0cbb85e79750918f1b9c8436a4598ad08f3fb461fe6a454041a\",\"dweb:/ipfs/QmUbF6XrBWgKrUqEeTYSiF8Haap4kNJ3H678qbZVutJW6K\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.8+commit.dddeac2f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct TimeswapV2OptionCollectCallbackParam",
              "name": "param",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "strike",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maturity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "token0Amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "token1Amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "timeswapV2OptionCollectCallback",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "timeswapV2OptionCollectCallback((uint256,uint256,uint256,uint256,uint256,bytes))": {
            "details": "In the implementation, you must have enough short positions for the collect transaction. The caller of this method must be checked to be a Timeswap V2 Option pair deployed by the canonical Timeswap V2 Factory.The token0 and token1 will already transferred to the receipients.",
            "params": {
              "param": "The parameter of the callback."
            },
            "returns": {
              "data": "The bytes code returned from the callback."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "timeswapV2OptionCollectCallback((uint256,uint256,uint256,uint256,uint256,bytes))": {
            "notice": "Called to `msg.sender` after initiating a collect from ITimeswapV2Option#collect."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=../../node_modules/@ensdomains/",
        ":@openzeppelin/=../../node_modules/@openzeppelin/",
        ":@timeswap-labs/=../",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=../../node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=../../node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "../v2-option/src/interfaces/callbacks/ITimeswapV2OptionCollectCallback.sol": "ITimeswapV2OptionCollectCallback"
      },
      "libraries": {}
    },
    "sources": {
      "../v2-option/src/interfaces/callbacks/ITimeswapV2OptionCollectCallback.sol": {
        "keccak256": "0x6900e91a9f6ed3d170373a890a250c587c74d5ec6227ed8757a71f1d5b2b102d",
        "urls": [
          "bzz-raw://eb1b00ad6049942529256a8be74335c52d0a4fc7d7613b798bb8a34051292323",
          "dweb:/ipfs/QmUocGzkpcBBH3EEpt31A6aun7sMWRJvnLPTtE1orq3Fs1"
        ],
        "license": "Unlicense"
      },
      "../v2-option/src/structs/CallbackParam.sol": {
        "keccak256": "0x981dbd1ff1e45f14fe6c7a8910908bc011f9645b589266aab14e9dc508fd1ead",
        "urls": [
          "bzz-raw://044d6a6c0169d0cbb85e79750918f1b9c8436a4598ad08f3fb461fe6a454041a",
          "dweb:/ipfs/QmUbF6XrBWgKrUqEeTYSiF8Haap4kNJ3H678qbZVutJW6K"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "../v2-option/src/interfaces/callbacks/ITimeswapV2OptionCollectCallback.sol",
    "id": 49858,
    "exportedSymbols": {
      "ITimeswapV2OptionCollectCallback": [
        49857
      ],
      "TimeswapV2OptionCollectCallbackParam": [
        3209
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:973:23",
    "nodes": [
      {
        "id": 49844,
        "nodeType": "PragmaDirective",
        "src": "37:23:23",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".8"
        ]
      },
      {
        "id": 49846,
        "nodeType": "ImportDirective",
        "src": "62:85:23",
        "nodes": [],
        "absolutePath": "../v2-option/src/structs/CallbackParam.sol",
        "file": "../../structs/CallbackParam.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49858,
        "sourceUnit": 3210,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49845,
              "name": "TimeswapV2OptionCollectCallbackParam",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "70:36:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49857,
        "nodeType": "ContractDefinition",
        "src": "302:707:23",
        "nodes": [
          {
            "id": 49856,
            "nodeType": "FunctionDefinition",
            "src": "876:131:23",
            "nodes": [],
            "documentation": {
              "id": 49848,
              "nodeType": "StructuredDocumentation",
              "src": "351:520:23",
              "text": "@notice Called to `msg.sender` after initiating a collect from ITimeswapV2Option#collect.\n @dev In the implementation, you must have enough short positions for the collect transaction.\n The caller of this method must be checked to be a Timeswap V2 Option pair deployed by the canonical Timeswap V2 Factory.\n @dev The token0 and token1 will already transferred to the receipients.\n @param param The parameter of the callback.\n @return data The bytes code returned from the callback."
            },
            "functionSelector": "dc6fddcf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "timeswapV2OptionCollectCallback",
            "nameLocation": "885:31:23",
            "parameters": {
              "id": 49852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49851,
                  "mutability": "mutable",
                  "name": "param",
                  "nameLocation": "963:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 49856,
                  "src": "917:51:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TimeswapV2OptionCollectCallbackParam_$3209_calldata_ptr",
                    "typeString": "struct TimeswapV2OptionCollectCallbackParam"
                  },
                  "typeName": {
                    "id": 49850,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49849,
                      "name": "TimeswapV2OptionCollectCallbackParam",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3209,
                      "src": "917:36:23"
                    },
                    "referencedDeclaration": 3209,
                    "src": "917:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TimeswapV2OptionCollectCallbackParam_$3209_storage_ptr",
                      "typeString": "struct TimeswapV2OptionCollectCallbackParam"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:53:23"
            },
            "returnParameters": {
              "id": 49855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49854,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1001:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 49856,
                  "src": "988:17:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 49853,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:19:23"
            },
            "scope": 49857,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 49847,
          "nodeType": "StructuredDocumentation",
          "src": "149:153:23",
          "text": "@title Callback for ITimeswapV2Option#collect\n @notice Any contract that calls ITimeswapV2Option#collect can optionally implement this interface."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          49857
        ],
        "name": "ITimeswapV2OptionCollectCallback",
        "nameLocation": "312:32:23",
        "scope": 49858,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 23
}